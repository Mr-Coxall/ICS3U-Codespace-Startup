// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.233.0/containers/debian
{
  "name": "Debian",
  "build": {
    "dockerfile": "Dockerfile",
    // Update 'VARIANT' to pick an Debian version: bullseye, buster
    // Use bullseye on local arm64/Apple Silicon.
    "args": {
      "VARIANT": "bullseye"
    }
  },
  // Set *default* container specific settings.json values on container create.
  "settings": {
    "C_Cpp.autocomplete": "Enabled",
    "C_Cpp.codeFolding": "Disabled",
    "C_Cpp.dimInactiveRegions": false,
    "C_Cpp.enhancedColorization": "Enabled",
    "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: Google, IndentWidth: 4, ColumnLimit: 0}",
    "editor.fontSize": 20,
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.insertSpaces": true,
    "editor.tabSize": 4,
    "editor.minimap.enabled": false,
    "editor.inlineSuggest.enabled": true,
    "editor.formatOnType": true,
    "editor.bracketPairColorization.enabled": true,
    "editor.fontFamily": "'Comic Mono', Consolas, 'Courier New', monospace",
    "editor.guides.indentation": true,
    "editor.guides.bracketPairs": true,
    "editor.renderWhitespace": "all",
    "editor.suggestSelection": "first",
    "editor.autoClosingQuotes": "always",
    "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
    "editor.codeLens": false,
    "editor.folding": false,
    "editor.smoothScrolling": true,
    "editor.formatOnPaste": true,
    "explorer.confirmDragAndDrop": false,
    "git.enableSmartCommit": true,
    "git.confirmSync": false,
    "html.format.extraLiners": "",
    "liveServer.settings.donotVerifyTags": true,
    "liveServer.settings.donotShowInfoMsg": true,
    "prettier.printWidth": 100,
    "prettier.configPath": "./",
    "prettier.semi": false,
    "python.formatting.blackArgs": [
      "--line-length",
      "120"
    ],
    "python.formatting.provider": "black",
    "python.languageServer": "Pylance",
    "python.defaultInterpreterPath": "/usr/local/python/bin/python",
    "security.workspace.trust.untrustedFiles": "newWindow",
    "terminal.integrated.fontSize": 20,
    "terminal.integrated.fontFamily": "'Comic Mono', Consolas, 'Courier New', monospace",
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "window.menuBarVisibility": "classic",
    "workbench.preferredLightColorTheme": "GitHub Dark",
    "workbench.iconTheme": "material-icon-theme",
    "workbench.colorTheme": "GitHub Dark",
    "workbench.editorAssociations": {
      "*.png": "imagePreview.previewEditor",
      "*.ico": "imagePreview.previewEditor"
    },
    "[css]": {
      "editor.defaultFormatter": "vscode.css-language-features"
    }
  },
  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "ms-python.python",
    "ms-vscode.cpptools-extension-pack",
    "hediet.vscode-drawio",
    "ms-vsliveshare.vsliveshare",
    "streetsidesoftware.code-spell-checker",
    "PKief.material-icon-theme",
    "VisualStudioExptTeam.vscodeintellicode",
    "medo64.render-crlf"
  ],
  // Uncomment the next line to use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "pip3 install cpplint",
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],
  // Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
  // "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
  // Uncomment when using a ptrace-based debugger like C++, Go, and Rust
  // "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode",
  "features": {
    "git": "latest",
    "python": "latest"
  }
}
